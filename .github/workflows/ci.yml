name: Testing Pipeline (with Docker Compose)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  tests:
    name: 🐳 CI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install dependencies for test runner
        run: npm ci

      - name: Create .env.test file from GitHub Secrets
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env.test
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env.test
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env.test
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env.test
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env.test
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env.test
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env.test
          echo "OPENAI_API_COMPLETIONS=${{ secrets.OPENAI_API_COMPLETIONS }}" >> .env.test
          echo "OPENAI_API_RESPONSES=${{ secrets.OPENAI_API_RESPONSES }}" >> .env.test
          echo "OPENAI_API_MODEL=${{ secrets.OPENAI_API_MODEL }}" >> .env.test

      - name: Build and start services with Docker Compose
        run: docker compose --env-file .env.test up -d --build

      - name: Wait for app to be ready
        run: |
          echo "Waiting for app to be ready..."
          until curl --fail http://localhost:3000; do
            sleep 2
          done
          echo "App is ready."

      - name: Run database migrations
        run: npm run migrate

      - name: Run seed script
        run: npm run seed

      - name: Run unit tests
        run: npm run test

      - name: Shut down Docker Compose
        run: docker compose --env-file .env.test down
